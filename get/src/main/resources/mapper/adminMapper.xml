<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.get.admin.AdminMapper">

  <select id="getMembers">
    SELECT EMAIL, USERNAME, MEM_IDX, TO_CHAR(COM_DATE,'YY-MM-DD') COM_DATE, USER_GRANT
     FROM MEMBERS
     WHERE USER_GRANT IN ('USER')
     ORDER BY COM_DATE
     OFFSET #{arg0} ROWS FETCH NEXT #{arg1} ROWS ONLY
  </select>
  
  <select id="getTotalMembersCount">
    SELECT COUNT(*)
      FROM MEMBERS
  </select>
  
  <select id="getBanMembers">
    SELECT EMAIL, USERNAME, MEM_IDX, TO_CHAR(COM_DATE,'YY-MM-DD') COM_DATE, USER_GRANT
     FROM MEMBERS
     WHERE USER_GRANT IN ('BAN')
     ORDER BY COM_DATE
     OFFSET #{arg0} ROWS FETCH NEXT #{arg1} ROWS ONLY
  </select>
  
  <select id="getTotalBanMemberCount">
    SELECT COUNT(*)
      FROM MEMBERS
      WHERE USER_GRANT IN ('BAN')
  </select>
  
  <select id="getUser">
    SELECT EMAIL, NICKNAME, USERNAME, TO_CHAR(BIRTH,'YYYY-MM-DD') BIRTH, PHONE, MEM_IDX, ADDRESS1, ADDRESS2, POSTNUMBER, TO_CHAR(COM_DATE,'YY-MM-DD') COM_DATE, USER_GRANT
      FROM MEMBERS
      WHERE MEM_IDX = #{ mem_idx }
  </select>
  
  <update id="userBan">
    UPDATE MEMBERS
     SET USER_GRANT = 'BAN'
     WHERE MEM_IDX = #{ mem_idx }
  </update>
  
  <update id="userBanClear">
    UPDATE MEMBERS
     SET USER_GRANT = 'USER'
     WHERE MEM_IDX = #{ mem_idx }
  </update>
  
  <select id="getTotaladminPostCount">
    SELECT COUNT(COUNT(RESIVER_IDX)) CNT
    FROM(
      SELECT
          MEMBER_REPORT.RESIVER_IDX
        , FOUND.FOUND_TITLE TITLE
        , FOUND.EMAIL EMAIL
        , TO_CHAR(FOUND.FOUND_DATE,'YY-MM-DD') AS P_REG_DATE
      FROM MEMBER_REPORT
       JOIN FOUND ON MEMBER_REPORT.RESIVER_IDX = FOUND.FOUND_IDX
      UNION ALL
      SELECT
          MEMBER_REPORT.RESIVER_IDX
        , LOST_ITEMS.LOST_TITLE TITLE
        , LOST_ITEMS.EMAIL EMAIL
        , TO_CHAR(LOST_ITEMS.LOST_DATE,'YY-MM-DD') AS P_REG_DATE
      FROM MEMBER_REPORT
       JOIN LOST_ITEMS ON MEMBER_REPORT.RESIVER_IDX = LOST_ITEMS.LOST_IDX)
    GROUP BY RESIVER_IDX
  </select>
  
  <select id="adminPostList">
  SELECT COUNT(RESIVER_IDX) RESIVER_IDX_CNT, RESIVER_IDX, TITLE, EMAIL, P_REG_DATE
    FROM(
      SELECT
          MEMBER_REPORT.RESIVER_IDX
        , FOUND.FOUND_TITLE TITLE
        , FOUND.EMAIL EMAIL
        , TO_CHAR(FOUND.FOUND_DATE,'YY-MM-DD') AS P_REG_DATE
      FROM MEMBER_REPORT
       JOIN FOUND ON MEMBER_REPORT.RESIVER_IDX = FOUND.FOUND_IDX
      WHERE FOUND_STATE IN(2)
      UNION ALL
      SELECT
          MEMBER_REPORT.RESIVER_IDX
        , LOST_ITEMS.LOST_TITLE TITLE
        , LOST_ITEMS.EMAIL EMAIL
        , TO_CHAR(LOST_ITEMS.LOST_DATE,'YY-MM-DD') AS P_REG_DATE
      FROM MEMBER_REPORT
       JOIN LOST_ITEMS ON MEMBER_REPORT.RESIVER_IDX = LOST_ITEMS.LOST_IDX
      WHERE LOST_STATE IN(2))
    GROUP BY TITLE, EMAIL, P_REG_DATE, RESIVER_IDX
    OFFSET #{arg0} ROWS FETCH NEXT #{arg1} ROWS ONLY
  </select>
  
  <select id="getReport">
    SELECT REPORT_IDX, REPORTER_IDX, RESIVER_IDX, R_CONTENT, TO_CHAR(R_REG_DATE,'YY-MM-DD') R_REG_DATE
     FROM MEMBER_REPORT
     WHERE RESIVER_IDX = #{ resiver_idx }
  </select>
  
  <update id="postBan">
    UPDATE
    <if test="resiver_idx.contains('LO') and !resiver_idx.contains('FD')">
      LOST_ITEMS
       SET LOST_STATE = 3
      WHERE LOST_IDX = #{ resiver_idx }
    </if>
    <if test="!resiver_idx.contains('LO') and resiver_idx.contains('FD')">
      FOUND
       SET FOUND_STATE = 3
      WHERE FOUND_IDX = #{ resiver_idx }
    </if>
  </update>
  
  <select id="adminBanPostList">
   SELECT COUNT(RESIVER_IDX) RESIVER_IDX_CNT, RESIVER_IDX, TITLE, EMAIL, P_REG_DATE
    FROM(
      SELECT
          MEMBER_REPORT.RESIVER_IDX
        , FOUND.FOUND_TITLE TITLE
        , FOUND.EMAIL EMAIL
        , TO_CHAR(FOUND.FOUND_DATE,'YY-MM-DD') AS P_REG_DATE
      FROM MEMBER_REPORT
       JOIN FOUND ON MEMBER_REPORT.RESIVER_IDX = FOUND.FOUND_IDX
      WHERE FOUND_STATE = 3
      UNION ALL
      SELECT
          MEMBER_REPORT.RESIVER_IDX
        , LOST_ITEMS.LOST_TITLE TITLE
        , LOST_ITEMS.EMAIL EMAIL
        , TO_CHAR(LOST_ITEMS.LOST_DATE,'YY-MM-DD') AS P_REG_DATE
      FROM MEMBER_REPORT
       JOIN LOST_ITEMS ON MEMBER_REPORT.RESIVER_IDX = LOST_ITEMS.LOST_IDX
      WHERE LOST_STATE = 3)
    GROUP BY RESIVER_IDX, TITLE, EMAIL, P_REG_DATE
  </select>
  
  <update id="postBanClear">
    UPDATE
    <if test="resiver_idx.contains('LO') and !resiver_idx.contains('FD')">
      LOST_ITEMS
       SET LOST_STATE = 2
      WHERE LOST_IDX = #{ resiver_idx }
    </if>
    <if test="!resiver_idx.contains('LO') and resiver_idx.contains('FD')">
      FOUND
       SET FOUND_STATE = 2
      WHERE FOUND_IDX = #{ resiver_idx }
    </if>
  </update>
</mapper>